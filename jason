#!/usr/bin/env bash
shopt -u xpg_echo
json=$(cat)

declare -a seen
declare obj
declare level
key=( this )

function keypath() {
  echo -n ${key[0]} && [ ${#key[*]} -gt 1 ] && printf "[%s]" "${key[@]:1}"
}

index=0
depth=0
char=${json:0:1}
until [[ -z "$char" ]]; do
  case "${char}" in ( '' )
    ;; ( ':' | ',' )
      [[ ${level:0:1} == '[' ]] && key[$depth]=$[ ${key[$depth]} + 1 ]
      obj="${obj}${char} "
    ;; ( [tfn] )
      [[ $char == 'f' ]] && length=5 || length=4
      value="${json:$index:$length}"
      [[ $value =~ true|null|false ]] || exit 1
      let index=index+$length-1
    ;; ( '{' | '[' )
      let depth=depth+1
      level="${char}${level}"
      seen[$depth-1]="$obj"
      seen[$depth]="${char} "
      obj="${seen[$depth]}"
      key[$depth]=0
    ;; ( '}' | ']' )
      unset key[$depth]
      let depth=depth-1
      [[ ${#obj} == 2 ]] && value="${level:0:1} ${char}" || value="${obj} ${char}"
      level="${level:1}"
      obj="${seen[$depth]}"
    ;; ( '"' )
      let i=$index+1
      until [[ ${json:$i:1} == '"' ]]; do
        [[ ${json:$i:1} == '\' ]] && let i=i+2 || let i=i+1
      done
      value="${json:$index:$i-$index+1}"
      index=$i
      if [[ ${level:0:1} == '{' && ${obj: -2} != ': ' ]]; then
        key[$depth]="$value"
        obj="${obj}${value}"
        unset value
      fi
    ;; ( [-0-9] )
      let i=$index+1
      while [[ ${json:$i:1} =~ [0-9] ]]; do let i=i+1; done
      [[ ${json:$i:1} =~ [.] ]] && let i=i+1
      while [[ ${json:$i:1} =~ [0-9] ]]; do let i=i+1; done
      [[ ${json:$i:1} =~ [eE] ]] && let i=i+2
      while [[ ${json:$i:1} =~ [0-9] ]]; do let i=i+1; done
      value="${json:$index:$i-$index}"
      let index=$i-1
    ;; ( [[:space:]] )
    ;; ( * ) exit 1
  esac

  if [[ ! -z $value ]]; then
    echo "$(keypath): $value"
    obj="${obj}${value}"
    unset value
  fi

  let index=index+1
  char=${json:$index:1}
done
