#!/usr/bin/env bash
shopt -u xpg_echo
json=$(cat)

declare -a seen
declare obj
declare level
key=( this )
needle=( this )

keypath=${1#this}
index=0
char=${keypath:0:1}
[[ ! -z $keypath && ! "$char" =~ [\[\.:] ]] && char='.' && index=-1
until [[ -z "$char" ]]; do
  case "${char}" in ('')
    ;; ( '[' | '.' | ':' )
      [[ ! -z $autoquote ]] && needle[${#needle[@]}-1]="${needle[${#needle[@]}-1]}\"" && unset autoquote;
      [[ "${char}" == ':' ]] && needle[${#needle[@]}]='*'
      needle[${#needle[@]}]=''
      [[ "${char}" != '[' ]] && needle[${#needle[@]}-1]='"' && autoquote=1
    ;; ( ']' )
    ;; ( * )   needle[${#needle[@]}-1]="${needle[${#needle[@]}-1]}${char}"
  esac
  let index=index+1
  char=${keypath:$index:1}
done
[[ ! -z $autoquote ]] && needle[${#needle[@]}-1]="${needle[${#needle[@]}-1]}\"";

index=0
depth=0
char=${json:0:1}
until [[ -z "$char" ]]; do
  case "${char}" in ( '' )
    ;; ( ':' | ',' )
      [[ ${level:0:1} == '[' ]] && key[$depth]=$[ ${key[$depth]} + 1 ]
      obj="${obj}${char} "
    ;; ( [tfn] )
      [[ $char == 'f' ]] && length=5 || length=4
      value="${json:$index:$length}"
      [[ $value =~ true|null|false ]] || exit 1
      let index=index+$length-1
    ;; ( '{' | '[' )
      let depth=depth+1
      level="${char}${level}"
      seen[$depth-1]="$obj"
      seen[$depth]="${char} "
      obj="${seen[$depth]}"
      key[$depth]=0
    ;; ( '}' | ']' )
      unset key[$depth]
      let depth=depth-1
      [[ ${#obj} == 2 ]] && value="${level:0:1} ${char}" || value="${obj} ${char}"
      level="${level:1}"
      obj="${seen[$depth]}"
    ;; ( '"' )
      substring="${json:$index}"
      value="$char"
      until [[ $value =~ [^\\](\\.)*\" ]]; do
        str="${substring#"$value"}"
        value="${value}${str%%\"*}\""
      done
      index=$index+${#value}-1
      if [[ ${level:0:1} == '{' && ${obj: -2} != ': ' ]]; then
        key[$depth]="$value"
        obj="${obj}${value}"
        unset value
      fi
    ;; ( [-0-9] )
      let i=$index+1
      while [[ ${json:$i:1} =~ [0-9] ]]; do let i=i+1; done
      [[ ${json:$i:1} =~ [.] ]] && let i=i+1
      while [[ ${json:$i:1} =~ [0-9] ]]; do let i=i+1; done
      [[ ${json:$i:1} =~ [eE] ]] && let i=i+2
      while [[ ${json:$i:1} =~ [0-9] ]]; do let i=i+1; done
      value="${json:$index:$i-$index}"
      let index=$i-1
    ;; ( [[:space:]] )
    ;; ( * ) exit 1
  esac

  if [[ ! -z $value ]]; then
    if [[ ${#needle[@]} == 1 ]]; then
      success=1
    elif [[ "${#needle[@]}" == "${#key[@]}" ]]; then
      success=1
      for i in "${!needle[@]}"; do
        [[ "${needle[$i]}" != '*' && "${needle[$i]}" != "${key[$i]}" ]] && unset success && break
      done
    else
      unset success
    fi
    if [[ ! -z $success ]]; then
      echo "$(echo -n ${key[0]} && [ ${#key[*]} -gt 1 ] && printf "[%s]" "${key[@]:1}")	$value"
      unset sucess
    fi
    obj="${obj}${value}"
    unset value
  fi

  let index=index+1
  char=${json:$index:1}
done
