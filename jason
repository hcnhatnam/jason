#!/usr/bin/env bash
shopt -u xpg_echo
json=$(cat)

declare level
declare -a data
declare struct
key=( this )

function keypath() {
  echo -n ${key[0]} && [ ${#key[*]} -gt 1 ] && printf "[%s]" "${key[@]:1}"
}

while [[ ! -z "$json" ]]; do
  char=${json:0:1}

  if [[ $char =~ [[{] ]]; then
    level="${char}${level}"
    data[${#level}-1]="$struct"
    data[${#level}]="${char} "
    struct="${data[${#level}]}"
    key[${#level}]=0
  elif [[ $char == '"' ]]; then
    value=$(expr "$json" : '\("\(\(\([^\"]*\([\][^"]\)*\)*[\]"\)*\)*\([^"]\)*"\)')
    length=${#value}
    if [[ ${level:0:1} == '{' && ${struct: -2} != ': ' ]]; then
      key[${#level}]="$value"
      struct="${struct}${value}"
      unset value
    fi
    json="${json:$length-1}"
  elif [[ $char =~ [-0-9] ]]; then
    value=$(expr "$json" : '\(-*[0-9][0-9]*\(\.[0-9][0-9]*\)\{0,1\}\([eE][+-]\{0,1\}[0-9][0-9]*\)\{0,1\}\)')
    length=${#value}
    json="${json:$length-1}"
  elif [[ $char =~ [tfn] ]]; then
    [[ $char == 'f' ]] && length=5 || length=4
    value="${json:0:$length}"
    [[ $value == 'true' || $value == 'null' || $value == 'false' ]] || exit 1
    json="${json:$length-1}"
  elif [[ $char =~ [:,] ]]; then
    [[ ${level:0:1} == '[' ]] && key[${#level}]=$[ ${key[${#level}]} + 1 ]
    struct="${struct}${char} "
  elif [[ $char =~ []}] ]]; then
    [[ "${char}" == '}' ]] && pair='{' || pair='['
    [[ "${struct}" != "${pair} " ]] && value="${struct} ${char}" || value="${pair} ${char}"
    level="${level:1}"
    struct="${data[${#level}]}"
    unset key[${#level}+1]
  elif [[ ! $char =~ [[:space:]] ]]; then
    exit 1
  fi

  if [[ ! -z $value ]]; then
    echo "$(keypath): $value"
    struct="${struct}${value}"
    unset value
  fi
  json=${json:1}
done
